{"version":3,"file":"static/js/334.88e13d58.chunk.js","mappings":"gNA6DA,UAtDuB,SAAHA,GAAiC,IAA3BC,EAAOD,EAAPC,QAASC,EAAUF,EAAVE,WACjCC,GAA4CC,EAAAA,EAAAA,UAAS,CAAC,GAAEC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAjDI,EAAcF,EAAA,GAAEG,EAAiBH,EAAA,GACxCI,GAA4CL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAjDE,EAAcD,EAAA,GAAEE,EAAiBF,EAAA,GACxCG,GAA0DT,EAAAA,EAAAA,UAAS,IAAGU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAA/DE,EAAqBD,EAAA,GAAEE,EAAwBF,EAAA,GACtDG,GAAgEb,EAAAA,EAAAA,UAAS,IAAGc,GAAAZ,EAAAA,EAAAA,GAAAW,EAAA,GAArEE,EAAwBD,EAAA,GAAEE,EAA2BF,EAAA,GACpDG,GAAOC,EAAAA,EAAAA,MAAPD,GAwCR,OAtCAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAkB,eAAAC,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAR,EAAAA,EAAAA,KAAAS,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAGR,OAFXT,EAAgB,oCAChBC,EAAmB,qDACzB7B,GAAW,GAAMmC,EAAAE,KAAA,GACgBC,EAAAA,EAAAA,IAAU,GAADC,OAAIX,EAAa,wBAAAW,OAAuBpB,GAAMqB,EAAAA,IAAgB,OAMvG,GANKV,EAAkBK,EAAAM,KACxBzC,GAAW,GAETM,EADEwB,GAGgB,CAAC,IAIjBA,EAAmB,CAADK,EAAAE,KAAA,SACJ,OAAhBrC,GAAW,GAAKmC,EAAAE,KAAA,IACiBC,EAAAA,EAAAA,IAAU,GAADC,OAAIV,EAAgB,kBAAAU,OAAiBT,EAAmBY,MAAQC,EAAAA,IAAe,QAGzG,OAHVZ,EAAkBI,EAAAM,KACxBzC,GAAW,GACcU,EAArBqB,EAAuCA,EAAmBa,SAAkC,IAChG5C,GAAW,GAAKmC,EAAAE,KAAA,IACwBC,EAAAA,EAAAA,IAAU,GAADC,OAAIX,EAAa,sBAAAW,OAAqBT,EAAmBe,QAAUL,EAAAA,IAAiB,KAAD,GAGpH,OAHVR,EAAyBG,EAAAM,KAC/BzC,GAAW,GACcc,EAArBiB,EAA8CC,EAA0D,IAC5GhC,GAAW,GAAKmC,EAAAE,KAAA,IAC2BC,EAAAA,EAAAA,IAAU,GAADC,OAAIX,EAAa,yBAAAW,OAAwBT,EAAmBgB,WAAaN,EAAAA,IAAiB,KAAD,GAAvIP,EAA4BE,EAAAM,KAClCzC,GAAW,GACckB,EAArBa,EAAiDE,EAAgE,IAAGE,EAAAE,KAAA,iBAGxH3B,EAAkB,IAClBI,EAAyB,IACzBI,EAA4B,IAAG,yBAAAiB,EAAAY,OAAA,GAAApB,EAAA,KAElC,kBAhCuB,OAAAJ,EAAAyB,MAAA,KAAAC,UAAA,KAiCxB3B,GACF,GAAG,CAACH,KAIF+B,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAAAC,SAAA,EACFC,EAAAA,EAAAA,KAACC,EAAAA,EAAM,CAACvD,QAASA,EAASM,eAAgBA,KAC1CgD,EAAAA,EAAAA,KAACE,EAAAA,GAAc,CAACxD,QAASA,EAASU,eAAgBA,EAAgBiC,KAAMrC,EAAeqC,QACvFW,EAAAA,EAAAA,KAACG,EAAAA,GAAgB,CAACzD,QAASA,EAASc,sBAAuBA,EAAuBI,yBAA0BA,MAGlH,C","sources":["pages/ExerciseDetail.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { Box } from \"@mui/material\"\r\nimport { exerciseOptions, fetchData, youtubeOptions } from '../utils/fetchData';\r\nimport { Detail, ExerciseVideos, SimilarExercises } from '../components';\r\n\r\n\r\nconst ExerciseDetail = ({ loading, setLoading }) => {\r\n  const [exerciseDetail, setExerciseDetail] = useState({});\r\n  const [exerciseVideos, setExerciseVideos] = useState([])\r\n  const [targetMuscleExercises, setTargetMuscleExercises] = useState([])\r\n  const [equipmentMuscleExercises, setEquipmentMuscleExercises] = useState([])\r\n  const { id } = useParams()\r\n\r\n  useEffect(() => {\r\n    const fetchExercisesData = async () => {\r\n      const exerciseDBUrl = 'https://exercisedb.p.rapidapi.com';\r\n      const youtubeSearchUrl = \"https://youtube-search-and-download.p.rapidapi.com\"\r\n      setLoading(true);\r\n      const exerciseDetailData = await fetchData(`${exerciseDBUrl}/exercises/exercise/${id}`, exerciseOptions)\r\n      setLoading(false)\r\n      if (exerciseDetailData) {\r\n        setExerciseDetail(exerciseDetailData)\r\n      } else {\r\n        setExerciseDetail({})\r\n      }\r\n\r\n\r\n      if (exerciseDetailData) {\r\n        setLoading(true)\r\n        const exerciseVideosData = await fetchData(`${youtubeSearchUrl}/search?query=${exerciseDetailData.name}`, youtubeOptions)\r\n        setLoading(false)\r\n        if (exerciseVideosData) {setExerciseVideos(exerciseVideosData.contents)} else setExerciseVideos([])\r\n        setLoading(true)\r\n        const targetMuscleExercisesData = await fetchData(`${exerciseDBUrl}/exercises/target/${exerciseDetailData.target}`, exerciseOptions);\r\n        setLoading(false)\r\n        if (exerciseVideosData) {setTargetMuscleExercises(targetMuscleExercisesData)} else setTargetMuscleExercises([])\r\n        setLoading(true)\r\n        const equipmentMuscleExercisesData = await fetchData(`${exerciseDBUrl}/exercises/equipment/${exerciseDetailData.equipment}`, exerciseOptions);\r\n        setLoading(false)\r\n        if (exerciseVideosData) {setEquipmentMuscleExercises(equipmentMuscleExercisesData)} else setEquipmentMuscleExercises([])\r\n        \r\n      } else {\r\n        setExerciseVideos([])\r\n        setTargetMuscleExercises([])\r\n        setEquipmentMuscleExercises([])\r\n      }\r\n    }\r\n    fetchExercisesData()\r\n  }, [id])\r\n\r\n\r\n  return (\r\n    <Box>\r\n      <Detail loading={loading} exerciseDetail={exerciseDetail} />\r\n      <ExerciseVideos loading={loading} exerciseVideos={exerciseVideos} name={exerciseDetail.name} />\r\n      <SimilarExercises loading={loading} targetMuscleExercises={targetMuscleExercises} equipmentMuscleExercises={equipmentMuscleExercises} />\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default ExerciseDetail"],"names":["_ref","loading","setLoading","_useState","useState","_useState2","_slicedToArray","exerciseDetail","setExerciseDetail","_useState3","_useState4","exerciseVideos","setExerciseVideos","_useState5","_useState6","targetMuscleExercises","setTargetMuscleExercises","_useState7","_useState8","equipmentMuscleExercises","setEquipmentMuscleExercises","id","useParams","useEffect","fetchExercisesData","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","exerciseDBUrl","youtubeSearchUrl","exerciseDetailData","exerciseVideosData","targetMuscleExercisesData","equipmentMuscleExercisesData","wrap","_context","prev","next","fetchData","concat","exerciseOptions","sent","name","youtubeOptions","contents","target","equipment","stop","apply","arguments","_jsxs","Box","children","_jsx","Detail","ExerciseVideos","SimilarExercises"],"sourceRoot":""}