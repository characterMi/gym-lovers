{"version":3,"file":"static/js/334.a3e32c1f.chunk.js","mappings":"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","sources":["pages/ExerciseDetail.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { Helmet } from \"react-helmet-async\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Detail, ExerciseVideos, SimilarExercises } from \"../components\";\r\nimport { useDataStore } from \"../providers/DataStoreContext\";\r\nimport { exerciseOptions, fetchData, youtubeOptions } from \"../utils/fetchData\";\r\n\r\nconst ExerciseDetail = () => {\r\n  const { id } = useParams();\r\n\r\n  const { getDataByUrl, setNewData } = useDataStore();\r\n\r\n  const [loading, setLoading] = useState(true);\r\n  const [exerciseDetail, setExerciseDetail] = useState(undefined);\r\n  const [exerciseVideos, setExerciseVideos] = useState(undefined);\r\n  const [targetMuscleExercises, setTargetMuscleExercises] = useState(undefined);\r\n  const [equipmentMuscleExercises, setEquipmentMuscleExercises] =\r\n    useState(undefined);\r\n\r\n  useEffect(() => {\r\n    const fetchExercisesData = async () => {\r\n      const exerciseDBUrl = \"https://exercisedb.p.rapidapi.com\";\r\n\r\n      const getData = async (url, isYoutubeReq) => {\r\n        const cachedData = getDataByUrl(url);\r\n\r\n        if (cachedData) return cachedData;\r\n\r\n        setLoading(true);\r\n        const data = await fetchData(\r\n          url,\r\n          isYoutubeReq ? youtubeOptions : exerciseOptions\r\n        );\r\n\r\n        setLoading(false);\r\n        data && setNewData(url, data);\r\n\r\n        return data;\r\n      };\r\n\r\n      const exerciseDetailData = await getData(\r\n        `${exerciseDBUrl}/exercises/exercise/${id}`\r\n      );\r\n\r\n      if (!exerciseDetailData) {\r\n        setExerciseDetail(undefined);\r\n        setExerciseVideos(undefined);\r\n        setTargetMuscleExercises(undefined);\r\n        setEquipmentMuscleExercises(undefined);\r\n        return;\r\n      }\r\n\r\n      setExerciseDetail(exerciseDetailData);\r\n\r\n      const [\r\n        exerciseVideosData,\r\n        targetMuscleExercisesData,\r\n        equipmentMuscleExercisesData,\r\n      ] = await Promise.allSettled([\r\n        getData(\r\n          `https://youtube-search-and-download.p.rapidapi.com/search?query=${exerciseDetailData.name}`,\r\n          true\r\n        ),\r\n        getData(\r\n          `${exerciseDBUrl}/exercises/target/${exerciseDetailData.target}`\r\n        ),\r\n        getData(\r\n          `${exerciseDBUrl}/exercises/equipment/${exerciseDetailData.equipment}`\r\n        ),\r\n      ]);\r\n\r\n      if (exerciseVideosData) setExerciseVideos(exerciseVideosData.contents);\r\n      else setExerciseVideos(undefined);\r\n\r\n      if (targetMuscleExercisesData)\r\n        setTargetMuscleExercises(targetMuscleExercisesData);\r\n      else setTargetMuscleExercises(undefined);\r\n\r\n      if (equipmentMuscleExercisesData)\r\n        setEquipmentMuscleExercises(equipmentMuscleExercisesData);\r\n      else setEquipmentMuscleExercises(undefined);\r\n    };\r\n\r\n    fetchExercisesData();\r\n  }, [id]);\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>\r\n          Gym Lovers | Exercise {exerciseDetail?.name ?? \"(loading...)\"}\r\n        </title>\r\n      </Helmet>\r\n\r\n      <Detail loading={loading} exerciseDetail={exerciseDetail} />\r\n\r\n      <ExerciseVideos\r\n        loading={loading}\r\n        exerciseVideos={exerciseVideos}\r\n        name={exerciseDetail?.name}\r\n      />\r\n\r\n      <SimilarExercises\r\n        loading={loading}\r\n        targetMuscleExercises={targetMuscleExercises}\r\n        equipmentMuscleExercises={equipmentMuscleExercises}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ExerciseDetail;\r\n"],"names":["_exerciseDetail$name","id","useParams","_useDataStore","useDataStore","getDataByUrl","setNewData","_useState","useState","_useState2","_slicedToArray","loading","setLoading","_useState3","undefined","_useState4","exerciseDetail","setExerciseDetail","_useState5","_useState6","exerciseVideos","setExerciseVideos","_useState7","_useState8","targetMuscleExercises","setTargetMuscleExercises","_useState9","_useState10","equipmentMuscleExercises","setEquipmentMuscleExercises","useEffect","fetchExercisesData","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee2","exerciseDBUrl","getData","exerciseDetailData","_yield$Promise$allSet","_yield$Promise$allSet2","exerciseVideosData","targetMuscleExercisesData","equipmentMuscleExercisesData","wrap","_context2","prev","next","_ref2","_callee","url","isYoutubeReq","cachedData","data","_context","abrupt","fetchData","youtubeOptions","exerciseOptions","sent","stop","_x","_x2","apply","arguments","concat","Promise","allSettled","name","target","equipment","contents","_jsxs","_Fragment","children","_jsx","Helmet","Detail","ExerciseVideos","SimilarExercises"],"sourceRoot":""}