{"version":3,"file":"static/js/334.01a74a51.chunk.js","mappings":"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","sources":["pages/ExerciseDetail.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { Helmet } from \"react-helmet-async\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Detail, ExerciseVideos, SimilarExercises } from \"../components\";\r\nimport { useDataStore } from \"../providers/DataStoreContext\";\r\nimport { exerciseOptions, fetchData, youtubeOptions } from \"../utils/fetchData\";\r\n\r\nconst ExerciseDetail = () => {\r\n  const { id } = useParams();\r\n\r\n  const { getDataByUrl, setNewData } = useDataStore();\r\n\r\n  const [loading, setLoading] = useState(true);\r\n  const [exerciseDetail, setExerciseDetail] = useState(undefined);\r\n  const [exerciseVideos, setExerciseVideos] = useState(undefined);\r\n  const [targetMuscleExercises, setTargetMuscleExercises] = useState(undefined);\r\n  const [equipmentMuscleExercises, setEquipmentMuscleExercises] =\r\n    useState(undefined);\r\n\r\n  useEffect(() => {\r\n    const fetchExercisesData = async () => {\r\n      const exerciseDBUrl = \"https://exercisedb.p.rapidapi.com\";\r\n\r\n      const getData = async (url, isYoutubeReq = false) => {\r\n        const cachedData = getDataByUrl(url);\r\n\r\n        if (cachedData) return cachedData;\r\n\r\n        setLoading(true);\r\n        const data = await fetchData(\r\n          url,\r\n          isYoutubeReq ? youtubeOptions : exerciseOptions\r\n        );\r\n\r\n        setLoading(false);\r\n        data && setNewData(url, data);\r\n\r\n        return data;\r\n      };\r\n\r\n      const exerciseDetailData = await getData(\r\n        `${exerciseDBUrl}/exercises/exercise/${id}`\r\n      );\r\n\r\n      if (!exerciseDetailData) {\r\n        setExerciseDetail(undefined);\r\n        setExerciseVideos(undefined);\r\n        setTargetMuscleExercises(undefined);\r\n        setEquipmentMuscleExercises(undefined);\r\n        return;\r\n      }\r\n\r\n      setExerciseDetail(exerciseDetailData);\r\n\r\n      const [\r\n        exerciseVideosData,\r\n        targetMuscleExercisesData,\r\n        equipmentMuscleExercisesData,\r\n      ] = await Promise.allSettled([\r\n        getData(\r\n          `https://youtube-search-and-download.p.rapidapi.com/search?query=${exerciseDetailData.name}`,\r\n          true\r\n        ),\r\n        getData(\r\n          `${exerciseDBUrl}/exercises/target/${exerciseDetailData.target}`\r\n        ),\r\n        getData(\r\n          `${exerciseDBUrl}/exercises/equipment/${exerciseDetailData.equipment}`\r\n        ),\r\n      ]);\r\n\r\n      setExerciseVideos(exerciseVideosData.contents || []);\r\n      setTargetMuscleExercises(targetMuscleExercisesData);\r\n      setEquipmentMuscleExercises(equipmentMuscleExercisesData);\r\n    };\r\n\r\n    fetchExercisesData();\r\n  }, [id]);\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>\r\n          Gym Lovers |{\" \"}\r\n          {loading\r\n            ? \"(loading...)\"\r\n            : exerciseDetail?.name\r\n            ? `${exerciseDetail.name} Exercise`\r\n            : \"(error...)\"}\r\n        </title>\r\n      </Helmet>\r\n\r\n      <Detail loading={loading} exerciseDetail={exerciseDetail} />\r\n\r\n      <ExerciseVideos\r\n        loading={loading}\r\n        exerciseVideos={exerciseVideos}\r\n        name={exerciseDetail?.name}\r\n      />\r\n\r\n      <SimilarExercises\r\n        loading={loading}\r\n        targetMuscleExercises={targetMuscleExercises}\r\n        equipmentMuscleExercises={equipmentMuscleExercises}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ExerciseDetail;\r\n"],"names":["id","useParams","_useDataStore","useDataStore","getDataByUrl","setNewData","_useState","useState","_useState2","_slicedToArray","loading","setLoading","_useState3","undefined","_useState4","exerciseDetail","setExerciseDetail","_useState5","_useState6","exerciseVideos","setExerciseVideos","_useState7","_useState8","targetMuscleExercises","setTargetMuscleExercises","_useState9","_useState10","equipmentMuscleExercises","setEquipmentMuscleExercises","useEffect","fetchExercisesData","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee2","exerciseDBUrl","getData","exerciseDetailData","_yield$Promise$allSet","_yield$Promise$allSet2","exerciseVideosData","targetMuscleExercisesData","equipmentMuscleExercisesData","wrap","_context2","prev","next","_ref2","_callee","url","isYoutubeReq","cachedData","data","_args","arguments","_context","length","abrupt","fetchData","youtubeOptions","exerciseOptions","sent","stop","_x","apply","concat","Promise","allSettled","name","target","equipment","contents","_jsxs","_Fragment","children","_jsx","Helmet","Detail","ExerciseVideos","SimilarExercises"],"sourceRoot":""}